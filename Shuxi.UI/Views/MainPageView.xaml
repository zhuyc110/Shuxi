<views:MvxWpfView x:Class="Shuxi.UI.Views.MainPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
             xmlns:viewModel="clr-namespace:Shuxi.Core.ViewModels;assembly=Shuxi.Core"
             xmlns:local="clr-namespace:Shuxi.UI.Views"
             xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance viewModel:MainPageViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="650" d:DesignWidth="800">

    <views:MvxWpfView.Resources>
        <local:SexSource x:Key="sexSource"/>
    </views:MvxWpfView.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="3*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="1" Margin="20">
                <Label HorizontalAlignment="Left" VerticalAlignment="Center">值</Label>
                <TextBox Height="20" Text="{Binding Path=ConditionValue, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
            </StackPanel>

            <StackPanel Grid.Column="0" Margin="20">
                <Label HorizontalAlignment="Left" VerticalAlignment="Center">条件</Label>
                <ComboBox MinWidth="120"  HorizontalAlignment="Center" VerticalAlignment="Center"
                      ItemsSource="{Binding ConditionSource}" SelectedValue="{Binding Path=CurrentCondition}">
                </ComboBox>
            </StackPanel>

            <Button Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" MinWidth="50" MinHeight="50" Margin="10"
                    Command="{Binding Path=AddConditionCommand}">增加条件</Button>

            <Button Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="50" MinHeight="50"
                    Command="{Binding Path=SearchCommand}">重置条件</Button>

            <Button Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" MinWidth="50" MinHeight="50" Margin="10"
                    Command="{Binding Path=ResetCommand}">重设数据源</Button>
        </Grid>

        <ListView Grid.Row="1" ItemsSource="{Binding Path=Conditions}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding DisplayValue}"></TextBlock>
                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.ClearConditionCommand}"
                                CommandParameter="{Binding}">x</Button>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <ListView Grid.Row="2" ItemsSource="{Binding Path=FilteredData}">
            <ListView.View>
                <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="Click on file name to open it">
                    <GridViewColumn DisplayMemberBinding="{Binding Path=PerformedProcedureStepID}"  Header="Performed Procedure Step ID"  Width="180"/>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=PatientBirthDate, StringFormat={}{0:yyyy/MM/dd}}"  Header="Patient Birth Date" Width="auto"/>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=PerformedProcedureStepStartDate, StringFormat={}{0:yyyy/MM/dd}}"  Header="Performed Procedure Step Start Date" Width="auto"/>
                    <GridViewColumn Header="File name"  Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Behaviors:Interaction.Triggers>
                                        <Behaviors:EventTrigger EventName="MouseUp">
                                            <Behaviors:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=DataContext.OpenPathCommand}" 
                                                                           CommandParameter="{Binding}" />
                                        </Behaviors:EventTrigger>
                                    </Behaviors:Interaction.Triggers>
                                    <TextBlock.Text>
                                        <Binding Path="FileName"/>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="4">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="FontFamily" Value="Webdings" />
                        <Setter Property="Width" Value="60" />
                        <Setter Property="Margin" Value="4,0,4,0" />
                    </Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="4,0,4,0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="4,0,4,0" />
                        <Setter Property="Width" Value="40" />
                    </Style>
                </StackPanel.Resources>
                <Button Content="9" Command="{Binding Path=Pager.GotoFirstPageCommand}" />
                <Button Content="3" Command="{Binding Path=Pager.GotoPreviousPageCommand}" />
                <TextBlock Text="Page" />
                <TextBox Text="{Binding Path=Pager.CurrentPage, ValidatesOnExceptions=True}" />
                <TextBlock Text="{Binding Path=Pager.PageCount, StringFormat=of {0}}" />
                <Button Content="4" Command="{Binding Path=Pager.GotoNextPageCommand}" />
                <Button Content=":" Command="{Binding Path=Pager.GotoLastPageCommand}" />
            </StackPanel>
            <Label Grid.Column="1" HorizontalAlignment="Right">Today is also a good sky.</Label>
        </Grid>

    </Grid>
</views:MvxWpfView>
